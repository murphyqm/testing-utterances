[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "We can have multiple pages with various embedded interactive visualisations, to help provide context and support and to make the tool more useful.\nAdditionally, the website can be themed and styled to match other resources.\n\n\n\nData can also be presented in a more report-like format\n\n\nName\nLongitude\nLatitude\nType\n\n\n\n\nCommunity centre\n-8.89383\n51.6227\nCommunity Resources\n\n\nParish hall\n-8.89022\n51.6217\nCommunity Resources\n\n\nCo-operative caf√©\n-8.88721\n51.6225\nCommunity Resources\n\n\nMethodist hall\n-8.88699\n51.6218\nCommunity Resources\n\n\nGrocery shop\n-8.892\n51.6228\nRetailers\n\n\nCycling shop\n-8.891\n51.622\nRetailers\n\n\nChemist\n-8.889\n51.6223\nRetailers\n\n\nDry cleaners\n-8.887\n51.6215\nRetailers\n\n\n\n\n\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "new_comments_example.html",
    "href": "new_comments_example.html",
    "title": "Interactive Map with Utterances",
    "section": "",
    "text": "This is a very simple prototype dashboard. Mouse around the map below, and use the layers menu (top right-hand corner of the map) to view different map layers and resources, which can be toggled.\nProviding a sortable, searchable table of the underlying data also improves accessibility.\n\nMap of Community ResourcesUser Comments with Utterances\n\n\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\n\n\n&lt;!-- Utterances script to enable commenting and fetching data --&gt;\n&lt;script src=\"https://utteranc.es/client.js\"\n  repo=\"your-github-username/your-repo\" &lt;!-- Replace with your GitHub repo --&gt;\n  issue-term=\"pathname\"\n  label=\"location\"\n  theme=\"github-light\"\n  crossorigin=\"anonymous\"\n  async&gt;\n&lt;/script&gt;\n\n&lt;!-- Container for the map and user comments --&gt;\n&lt;div id=\"map\" style=\"height: 500px;\"&gt;&lt;/div&gt;\n\n&lt;script src=\"https://unpkg.com/leaflet/dist/leaflet.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n  // Initialize the map\n  var map = L.map('map').setView([51.6223, -8.889], 16); // Center on Clonakilty\n\n  // Add OpenStreetMap tiles as the base map\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    attribution: '&copy; &lt;a href=\"https://www.openstreetmap.org/copyright\"&gt;OpenStreetMap&lt;/a&gt; contributors'\n  }).addTo(map);\n\n  // Function to fetch and display comments with coordinates\n  async function fetchComments() {\n    // Fetch issues from GitHub using the GitHub API\n    const response = await fetch('https://api.github.com/repos/your-github-username/your-repo/issues?labels=location');  // Replace with your repo\n    const issues = await response.json();\n\n    // Loop through the issues and add markers to the map based on the comment body\n    issues.forEach(function(issue) {\n      const comment = issue.body;  // The comment text, which should contain lat, lon\n      const regex = /(-?\\d+\\.\\d+),\\s*(-?\\d+\\.\\d+)/;  // Regex to match lat, lon\n      const match = comment.match(regex);\n\n      if (match) {\n        const lat = parseFloat(match[1]);\n        const lon = parseFloat(match[2]);\n        L.marker([lat, lon]).addTo(map)\n          .bindPopup('&lt;b&gt;' + issue.title + '&lt;/b&gt;&lt;br&gt;' + comment);\n      }\n    });\n  }\n\n  // Fetch comments when the page loads\n  fetchComments();\n&lt;/script&gt;"
  },
  {
    "objectID": "new_comments_example.html#interactive-map",
    "href": "new_comments_example.html#interactive-map",
    "title": "Interactive Map with Utterances",
    "section": "",
    "text": "This is a very simple prototype dashboard. Mouse around the map below, and use the layers menu (top right-hand corner of the map) to view different map layers and resources, which can be toggled.\nProviding a sortable, searchable table of the underlying data also improves accessibility.\n\nMap of Community ResourcesUser Comments with Utterances\n\n\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\n\n\n&lt;!-- Utterances script to enable commenting and fetching data --&gt;\n&lt;script src=\"https://utteranc.es/client.js\"\n  repo=\"your-github-username/your-repo\" &lt;!-- Replace with your GitHub repo --&gt;\n  issue-term=\"pathname\"\n  label=\"location\"\n  theme=\"github-light\"\n  crossorigin=\"anonymous\"\n  async&gt;\n&lt;/script&gt;\n\n&lt;!-- Container for the map and user comments --&gt;\n&lt;div id=\"map\" style=\"height: 500px;\"&gt;&lt;/div&gt;\n\n&lt;script src=\"https://unpkg.com/leaflet/dist/leaflet.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n  // Initialize the map\n  var map = L.map('map').setView([51.6223, -8.889], 16); // Center on Clonakilty\n\n  // Add OpenStreetMap tiles as the base map\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    attribution: '&copy; &lt;a href=\"https://www.openstreetmap.org/copyright\"&gt;OpenStreetMap&lt;/a&gt; contributors'\n  }).addTo(map);\n\n  // Function to fetch and display comments with coordinates\n  async function fetchComments() {\n    // Fetch issues from GitHub using the GitHub API\n    const response = await fetch('https://api.github.com/repos/your-github-username/your-repo/issues?labels=location');  // Replace with your repo\n    const issues = await response.json();\n\n    // Loop through the issues and add markers to the map based on the comment body\n    issues.forEach(function(issue) {\n      const comment = issue.body;  // The comment text, which should contain lat, lon\n      const regex = /(-?\\d+\\.\\d+),\\s*(-?\\d+\\.\\d+)/;  // Regex to match lat, lon\n      const match = comment.match(regex);\n\n      if (match) {\n        const lat = parseFloat(match[1]);\n        const lon = parseFloat(match[2]);\n        L.marker([lat, lon]).addTo(map)\n          .bindPopup('&lt;b&gt;' + issue.title + '&lt;/b&gt;&lt;br&gt;' + comment);\n      }\n    });\n  }\n\n  // Fetch comments when the page loads\n  fetchComments();\n&lt;/script&gt;"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Basic example dashboard",
    "section": "",
    "text": "This is a very simple prototype dashboard. Mouse around the map below, and use the layers menu (top right hand corner of the map) to view different map layers and resources, which can be toggled.\nProviding a sortable, searchable table of the underlying data also improves accessibility.\n\nInteractive mapUnderlying data\n\n\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\n\n\nThis searchable table could be provided alongside the map with additional filtering capabilities, and link to the map, highlighting data selected in the table.\n\n\nInteractive Points of Interest in Clonakilty {#4c08b6d8}\n\n    \n      \n      Name\n      Longitude\n      Latitude\n      Type\n    \n  \n\n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\nLoading ITables v2.2.5 from the internet...\n(need help?)\n\n\n\n\n\n\n\n\n\nAs stated above, this is a very simple proof-of-concept; this is also a very light-weight, free web-app stored as static html. A full web-app running on a dedicated server can also run statistical calculations on the data, can link table filtering to the visualisation to allow for thorough exploration, and provide summary information on selected areas."
  },
  {
    "objectID": "test-js.html",
    "href": "test-js.html",
    "title": "Setting up js and comments",
    "section": "",
    "text": "&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Interactive Map Example&lt;/title&gt;\n    &lt;!-- Leaflet CSS --&gt;\n    &lt;link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet/dist/leaflet.css\" /&gt;\n    &lt;style&gt;\n        /* Set the height of the map container */\n        #map {\n            height: 500px;\n            width: 100%;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Interactive Map with Leaflet.js&lt;/h1&gt;\n    &lt;!-- Map container --&gt;\n    &lt;div id=\"map\"&gt;&lt;/div&gt;\n\n    &lt;!-- Leaflet JS --&gt;\n    &lt;script src=\"https://unpkg.com/leaflet/dist/leaflet.js\"&gt;&lt;/script&gt;\n\n    &lt;script&gt;\n        // Initialize the map and set its view to a specific geographical location and zoom level\n        var map = L.map('map').setView([51.505, -0.09], 13); // Example: London coordinates\n\n        // Add OpenStreetMap tiles as the map layer\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n            attribution: '&copy; &lt;a href=\"https://www.openstreetmap.org/copyright\"&gt;OpenStreetMap&lt;/a&gt; contributors'\n        }).addTo(map);\n\n        // Example of adding a marker to the map at a specific location with a popup\n        L.marker([51.5, -0.09]).addTo(map)\n            .bindPopup('&lt;b&gt;Hello world!&lt;/b&gt;&lt;br&gt;I am a popup.')\n            .openPopup();\n        \n        // Another example marker\n        L.marker([51.51, -0.1]).addTo(map)\n            .bindPopup('&lt;b&gt;Another Location!&lt;/b&gt;&lt;br&gt;Here is some info.')\n            .openPopup();\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;"
  }
]